<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"
	default-lazy-init="true">

	<context:annotation-config />
	<context:component-scan base-package="com.sinosoft"/>
	
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<!--
			Set a net.sf.ehcache.CacheManager instance here if you already have
			one. If not, a new one will be creaed with a default config:
			<property name="cacheManager" ref="ehCacheManager"/>
		-->
		<!--
			If you don't have a pre-built net.sf.ehcache.CacheManager instance to
			inject, but you want a specific Ehcache configuration to be used,
			specify that here. If you don't, a default will be used.: <property
			name="cacheManagerConfigFile"
			value="classpath:some/path/to/ehcache.xml"/>
		-->
		<property name="cacheManagerConfigFile" value="classpath:/ehcache.xml" />
	</bean>

	<!-- shiro -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="cacheManager" ref="cacheManager" />
		<!--
			Single realm app. If you have multiple realms, use the 'realms'
			property instead.
		-->
		<property name="sessionMode" value="http"/>
		<!-- <property name="realm" ref="jdbcRealm"/> -->
		<property name="realm" ref="samplerealm" />
	</bean>

	<bean id="samplerealm" class="com.sinosoft.user.SampleRealm">
		<property name="credentialsMatcher">
			<bean class="org.apache.shiro.authc.credential.Sha256CredentialsMatcher">
				<property name="storedCredentialsHexEncoded" value="true"/>
				<property name="hashSalted" value="true"/>
			</bean>
		</property>
	</bean>
	
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor" />
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	<bean id="secureRemoteInvocationExecutor"
		class="org.apache.shiro.spring.remoting.SecureRemoteInvocationExecutor">
		<property name="securityManager" ref="securityManager" />
	</bean>

	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/shirologin.html" />
		<property name="filters">
			<util:map>
				<entry key="authc">
					<bean
						class="org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter" />
				</entry>
			</util:map>
		</property>

		<property name="filterChainDefinitions">
			<value>
				/shirologin = authc
				/orderinfo/** = authc
				/orderinfomodel/** = authc
				/shopcar/** = authc
				/user/** = authc
				/collectInfoEdit** = authc
				/collectModelEdit** = authc
				/systemConfig/** = authc
            </value>
		</property>
	</bean>

</beans>